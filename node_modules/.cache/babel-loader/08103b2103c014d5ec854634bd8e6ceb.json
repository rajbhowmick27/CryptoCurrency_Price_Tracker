{"ast":null,"code":"var _jsxFileName = \"/home/raj/Pictures/cryptocurrency_price_tracker/src/Coin.js\";\nimport React from \"react\";\nimport \"./Coin.css\";\nimport { LineChart, XAxis, Tooltip, CartesianGrid, Line } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Coin = ({\n  name,\n  image,\n  symbol,\n  price,\n  volume,\n  priceChange,\n  marketcap,\n  currencyTag,\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"crypto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-symbol\",\n          children: symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-price\",\n          children: [currencyTag, price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), priceChange < 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-percent red\",\n          children: priceChange.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-percent green\",\n          children: priceChange.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-volume\",\n          children: [currencyTag, volume.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-marketcap\",\n          children: [currencyTag, marketcap.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 400,\n          height: 400,\n          data: data,\n          margin: {\n            top: 5,\n            right: 20,\n            left: 10,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#f5f5f5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"uv\",\n            stroke: \"#ff7300\",\n            yAxisId: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"pv\",\n            stroke: \"#387908\",\n            yAxisId: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Coin;\nexport default Coin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coin\");","map":{"version":3,"sources":["/home/raj/Pictures/cryptocurrency_price_tracker/src/Coin.js"],"names":["React","LineChart","XAxis","Tooltip","CartesianGrid","Line","Coin","name","image","symbol","price","volume","priceChange","marketcap","currencyTag","data","toFixed","toLocaleString","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Coin.css\";\n\nimport {LineChart, XAxis, Tooltip, CartesianGrid, Line} from 'recharts';\n\nconst Coin = ({\n  name,\n  image,\n  symbol,\n  price,\n  volume,\n  priceChange,\n  marketcap,\n  currencyTag,\n  data\n}) => {\n  return (\n    <div className=\"coin-container\">\n      <div className=\"coin-row\">\n        <div className=\"coin\">\n          <img src={image} alt=\"crypto\" />\n          <h1>{name}</h1>\n          <p className=\"coin-symbol\">{symbol}</p>\n          <p className=\"coin-price\">\n            {currencyTag}\n            {price}\n          </p>\n          {priceChange < 0 ? (\n            <p className=\"coin-percent red\">{priceChange.toFixed(2)}</p>\n          ) : (\n            <p className=\"coin-percent green\">{priceChange.toFixed(2)}</p>\n          )}\n          <p className=\"coin-volume\">\n            {currencyTag}\n            {volume.toLocaleString()}\n          </p>\n          <p className=\"coin-marketcap\">\n            {currencyTag}\n            {marketcap.toLocaleString()}\n          </p>\n\n          <LineChart\n            width={400}\n            height={400}\n            data={data}\n            margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n          >\n            <XAxis dataKey=\"name\" />\n            <Tooltip />\n            <CartesianGrid stroke=\"#f5f5f5\" />\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\n            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\n          </LineChart>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Coin;\n"]},"metadata":{},"sourceType":"module"}